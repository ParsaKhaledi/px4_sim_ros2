ARG ROS_DISTRO=humble
FROM nvidia/opengl:1.0-glvnd-devel-ubuntu22.04

LABEL maintainer="Parsa Khaledi <pa.aerospace@gmail.com>"

SHELL ["/bin/bash", "-c"]

ARG USER_NAME=px4
ARG USER_UID=1000
ARG USER_GID=1000

ENV DEBIAN_FRONTEND=noninteractive
ENV QT_X11_NO_MITSHM=1
ENV LANG=en_US.UTF-8
ENV ROS2_INSTALL_PATH=/opt/ros/$ROS_DISTRO
ENV WORKDIR=/${USER_NAME}/ws_px4
ENV ROS_DISTRO=humble
WORKDIR /

RUN apt-get clean
RUN apt update 1>/dev/null && apt -y upgrade 1>/dev/null && \
	apt install -y --no-install-recommends \
	vim udev git sudo unzip curl cmake wget tmux \
	gnupg2 lsb-release \
	gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl libpulse-mainloop-glib0 kmod fuse \
	libfuse2 libxcb-xinerama0 libxkbcommon-x11-0 libxcb-cursor-dev  \
	xauth xorg openbox python3-argcomplete python3 python3-pip \
	gcc-arm-none-eabi apt-utils gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl 1>/dev/null

# < Directly Get source >
RUN cd / &&\
		wget https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY && gpg --import NICE-GPG-KEY && \
        wget https://d1uj6qtbmh3dt5.cloudfront.net/2023.1/Servers/nice-dcv-2023.1-16388-ubuntu2204-x86_64.tgz && \
        tar -xvzf nice-dcv-2023.1-16388-ubuntu2204-x86_64.tgz && \
		cd nice-dcv-2023.1-16388-ubuntu2204-x86_64 && \
		apt install -y ./nice-dcv-server_2023.1.16388-1_amd64.ubuntu2204.deb 1>/dev/null

### INSTALL ROS2
RUN apt update 1>/dev/null && apt -y install locales && \
        locale-gen en_US en_US.UTF-8 && \
        update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 1>/dev/null
RUN sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
        apt update 1>/dev/null &&\
        apt install -y --no-install-recommends ros-$ROS_DISTRO-desktop ros-dev-tools 1>/dev/null && \
		rosdep init && rosdep update 

### Install Gazebo and some Reqs
RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | \ 
	sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null && \
	apt update && apt install -y --no-install-recommends\
	gz-harmonic ros-${ROS_DISTRO}-ros-gzharmonic 1>/dev/null

# Set User	
RUN groupadd ${USER_NAME} --gid ${USER_GID} && \
    useradd -l -m ${USER_NAME} -u ${USER_UID} -g ${USER_GID} -s /bin/bash && \
	echo "px4 ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/${USER_NAME} && \
	mkdir -p /px4 && \
	chmod 0440 /etc/sudoers.d/${USER_NAME} && chown -R ${USER_NAME}:${USER_NAME} /${USER_NAME} 

	
# # Change user
USER ${USER_NAME}
WORKDIR /${USER_NAME}/ws_px4

### Install Qground
RUN sudo usermod -a -G dialout root && sudo usermod -a -G dialout px4 && sudo apt remove modemmanager -y &&\
	cd /${USER_NAME} && wget https://d176tv9ibo4jno.cloudfront.net/latest/QGroundControl.AppImage &&\
	chmod +x ./QGroundControl.AppImage

### PX4 Stuff
RUN cd /${USER_NAME} && git clone https://github.com/PX4/PX4-Autopilot.git -b v1.15.4 --recursive \
	--progress --verbose 1>/dev/null && \
	cd /${USER_NAME}/PX4-Autopilot && ./Tools/setup/ubuntu.sh 

### Install Nav2 and rtabmap
RUN apt install -y  \
	ros-$ROS_DISTRO-rmw-cyclonedds-cpp \
	ros-$ROS_DISTRO-navigation2 \
	ros-$ROS_DISTRO-nav2-bringup \
	ros-$ROS_DISTRO-rtabmap-ros 1>/dev/null

### Install Micro XRCE-DDS
RUN cd /${USER_NAME} && git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git && \
	cd /${USER_NAME}/Micro-XRCE-DDS-Agent &&\
	mkdir build && cd build && cmake .. &&\
	make && sudo make install && sudo ldconfig /usr/local/lib/ &&\
	cd /${USER_NAME} && rm -rf /Micro-XRCE-DDS-Agent/build

### Build WS (px4_ros_com && px4_msgs)
RUN mkdir -p ${WORKDIR}/src
RUN cd ${WORKDIR}/src && git clone -b release/1.15 https://github.com/PX4/px4_msgs.git
RUN cd ${WORKDIR}/src && git clone https://github.com/PX4/px4_ros_com.git
RUN source /opt/ros/$ROS_DISTRO/setup.bash && cd ${WORKDIR} && colcon build

### Run PX4 Check
RUN cd /${USER_NAME}/PX4-Autopilot && make check_px4_sitl_default

# RUN source /opt/ros/$ROS_DISTRO/setup.bash && cd ${WORKDIR}/src/px4_ros_com/scripts/ && source build_ros2_workspace.bash

### Tumux conf
RUN echo "set -g mouse on" >> ~/.tmux.conf 

### Write in ~/.bashrc
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc && \
	echo "source ${WORKDIR}/install/setup.bash" >> ~/.bashrc 
	# export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

### Finilize
RUN rm -rf /var/lib/apt/lists/* &&\
	sudo apt autoremove -y && rm -rf /var/lib/apt/lists/*

### Adding CMD (Comming Soon :))
