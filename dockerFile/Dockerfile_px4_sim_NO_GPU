ARG ROS_DISTRO=humble
FROM ros:${ROS_DISTRO}-ros-base-jammy

SHELL ["/bin/bash", "-c"]

# ARG USER_NAME=ardupilot
# ARG USER_UID=1000
# ARG USER_GID=1000

ENV DEBIAN_FRONTEND=noninteractive
ENV QT_X11_NO_MITSHM=1
ENV LANG=en_US.UTF-8
ENV ROS2_INSTALL_PATH=/opt/ros/$ROS_DISTRO
ENV WORKDIR=/ws_px4
ENV ROS_DISTRO=humble
WORKDIR ${WORKDIR}

## Install Gazebo harmonic Nav2 and rtabmap 
RUN apt update 1>/dev/null	&& apt upgrade -y 1>/dev/null && \
	apt install -y --no-install-recommends \
	vim udev git sudo unzip curl cmake wget tmux \
	ros-dev-tools \
	gnupg2 lsb-release \
	xauth xorg openbox python3-argcomplete python3 python3-pip \
	gcc-arm-none-eabi apt-utils gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl \
	libfuse2 libxcb-xinerama0 libxkbcommon-x11-0 libxcb-cursor-dev  && \
	wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | \ 
	sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null && \
	apt update 1>/dev/null && apt install -y \
	gz-harmonic ros-${ROS_DISTRO}-ros-gzharmonic \
	ros-$ROS_DISTRO-rmw-cyclonedds-cpp\
	ros-$ROS_DISTRO-navigation2 \
	ros-$ROS_DISTRO-nav2-bringup \
	ros-$ROS_DISTRO-rtabmap-ros 1>/dev/null

# RUN pip3 install --user -U empy==3.3.4 pyros-genmsg setuptools

# # Set User	
# RUN groupadd ${USER_NAME} --gid ${USER_GID} && \
#     useradd -l -m ${USER_NAME} -u ${USER_UID} -g ${USER_GID} -s /bin/bash && \
# 	echo "ardupilot ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/${USER_NAME} && \
# 	mkdir -p /ardupilot && \
# 	chmod 0440 /etc/sudoers.d/${USER_NAME} && chown -R ${USER_NAME}:${USER_NAME} /${USER_NAME} &&\
# 	usermod -a -G dialout ${USER_NAME}

# # Change user
# USER ${USER_NAME}

# Install Qground
RUN usermod -a -G dialout root && apt remove modemmanager -y &&\
	cd / && wget https://d176tv9ibo4jno.cloudfront.net/latest/QGroundControl.AppImage &&\
	chmod +x ./QGroundControl.AppImage


## PX4 Stuff
RUN cd / && git clone https://github.com/PX4/PX4-Autopilot.git -b v1.15.1 --recursive \
	--progress --verbose 1>/dev/null && \
	cd /PX4-Autopilot && ./Tools/setup/ubuntu.sh 


## Install Micro XRCE-DDS
RUN cd / && git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git
RUN cd /Micro-XRCE-DDS-Agent &&\
	mkdir build && cd build && cmake .. &&\
	make && make install && sudo ldconfig /usr/local/lib/ &&\
	cd / && rm -rf /Micro-XRCE-DDS-Agent/build
	
# RUN pip3 install -U pyros-genmsg setuptools


### Build WS (px4_ros_com && px4_msgs && m-explore-ros2)
RUN mkdir -p ${WORKDIR}/src
RUN cd ${WORKDIR}/src && git clone -b release/1.15 https://github.com/PX4/px4_msgs.git
RUN cd ${WORKDIR}/src && git clone https://github.com/PX4/px4_ros_com.git
RUN source /opt/ros/$ROS_DISTRO/setup.bash && cd ${WORKDIR} && colcon build

# RUN cd /px4_sim_ros2/src && git clone --progress --verbose https://github.com/robo-friends/m-explore-ros2.git
# RUN cd / && git clone --progress --verbose https://github.com/ParsaKhaledi/px4_sim_ros2.git

# RUN source /opt/ros/$ROS_DISTRO/setup.bash && cd ${WORKDIR}/src/px4_ros_com/scripts/ && source build_ros2_workspace.bash

### Tumux conf
RUN cd ~ && git clone https://github.com/gpakosz/.tmux.git &&\
	ln -s -f .tmux/.tmux.conf &&\
	cp .tmux/.tmux.conf.local . &&\
	echo "set -g mouse on" >> ~/.tmux.conf 

### Write in ~/.bashrc
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc && \
	echo "source ${WORKDIR}/install/setup.bash" >> ~/.bashrc 
	# export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

### Finilize
RUN rm -rf /var/lib/apt/lists/* &&\
	sudo apt autoremove -y && rm -rf /var/lib/apt/lists/* 