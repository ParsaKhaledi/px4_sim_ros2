services:
  PX4:
    image: "${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
    container_name: px4_sim
    hostname: px4_sim
    tty: true
    privileged: true
    restart: unless-stopped
    # network_mode: "host"
    networks:
      px4:
        ipv4_address: "10.20.10.2"
    # expose:
    #   - 14450
    #   - 14460
    #   - 14445
    #   - 18570
    #   - 14550

    environment:
      DISPLAY: ${DISPLAY}
      XAUTHORITY: ${XAUTH}
      CameraType: ${CameraType}
        
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /dev:/dev/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./includes/gz/:/home/px4/volume/includes/gz/
      - ./includes/gz/startFiles/:/home/px4/volume/startFiles
      - ./Params:/home/px4/volume/Params

    # command: /bin/bash -c "sleep inf"
    # entrypoint: ["/bin/sh", "-c"]

    # command: /bin/bash -c "
    #   . /home/px4/volume/includes/gz/gz_modifications.bash ${CameraType} && \
    #   /home/px4/volume/startFiles/gz_start_px4_gz_sim.sh ${CameraType} ${World} &\
    #   /home/px4/volume/startFiles/gz_start_ros2_gz_bridge.sh & \
    #   /home/px4/volume/startFiles/gz_start_state_publisher.sh "

    command: /bin/bash -c "
      . /home/px4/volume/includes/gz/gz_modifications.bash ${CameraType} && \
      /home/px4/volume/startFiles/gz_start_px4_gz_sim.sh ${CameraType} ${World} &\
      /home/px4/volume/startFiles/gz_start_ros2_gz_bridge.sh
       "

  StaticTransform:
    image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
    container_name: st
    hostname: st
    tty: true
    privileged: true
    depends_on:
      - PX4
    restart: unless-stopped
    # network_mode: "host"
    networks:
      px4:
        ipv4_address: "10.20.10.10"

    # environment:
    #   DISPLAY: ${DISPLAY}
    #   XAUTHORITY: ${XAUTH}
        
    volumes:
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
       - ./includes/gz/:/home/px4/volume/includes/gz/
      - ./includes/gz/startFiles/:/home/px4/volume/startFiles
      - ./Params:/home/px4/volume/Params

    # command: /bin/bash -c "sleep inf"
    # entrypoint: ["/bin/sh", "-c"]

    command: /bin/bash -c "
      /home/px4/volume/startFiles/gz_start_state_publisher.sh"


  Qground:
    image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
    container_name: qground
    hostname: qground
    privileged: true
    tty: true
    # depends_on:
    #   - PX4
    # network_mode: "host"
    networks:
      px4:
        ipv4_address: "10.20.10.3"
    
    # restart: unless-stopped
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - ./.qground/config/:/home/px4/.config
      - ./.qground/cache/:/home/px4/.cache
      # - Add bind folders to save Qground Settings and map 

    command: /bin/bash -c " cd /home/px4/ && ./QGroundControl.AppImage " 


  # imu_filter:
  #   image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
  #   privileged: true
  #   # restart: unless-stopped
  #   network_mode: "host"
  #   # networks:
  #   #   mins:
  #   #     ipv4_address: "10.20.10.4"
  #   depends_on:
  #     # - roscore
  #     - oak
  #   # environment:
  #   #   DISPLAY: ${DISPLAY}
  #   #   "XAUTHORITY": ${XAUTH}
  #   volumes:
  #     # - /tmp/.X11-unix/:/tmp/.X11-unix/
  #     # - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
  #     - /dev/:/dev/
  #   command: /bin/bash -c "
  #     rosrun imu_filter_madgwick imu_filter_node \
  #     _use_mag:=false _use_magnetic_field_msg:=false _publish_tf:=false _world_frame:='enu' 
  #      /imu/data_raw:=/stereo_inertial_publisher/imu \
  #      /imu/data:=/imu/data "

  # rqt:
  #   image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
  #   container_name: rqt
  #   hostname: rqt
  #   tty: true
  #   # network_mode: "host"
  #   networks:
  #     px4:
  #       ipv4_address: "10.20.10.5"
  #   # restart: unless-stopped
  #   depends_on:
  #     - PX4
  #   environment:
  #     DISPLAY: ${DISPLAY}
  #     "XAUTHORITY": ${XAUTH}
  #   volumes:
  #     - /tmp/.X11-unix/:/tmp/.X11-unix/
  #   command: /bin/bash -c "
  #     source /home/px4/ws_px4/install/setup.bash && rqt"

  uxrcedds:
    image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
    container_name: uxrcedds
    hostname: uxrcedds
    # depends_on:
    #   - PX4
    tty: true
    # network_mode: "host"
    networks:
      px4:
        ipv4_address: "10.20.10.6"
    # restart: unless-stopped
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/

    command: /bin/bash -c "
      source /home/px4/ws_px4/install/setup.bash && MicroXRCEAgent udp4 -p 8888"

  Rtabmap:
    image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
    container_name: rtabmap
    hostname: rtabmap
    # depends_on:
    #   - PX4
    tty: true
    # network_mode: "host"
    networks:
      px4:
        ipv4_address: "10.20.10.7"
    # restart: unless-stopped
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=${XAUTH}
      - CamerType=$CamerType

    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./includes/gz/:/home/px4/volume/includes/gz/
      - ./includes/gz/startFiles/:/home/px4/volume/startFiles
      - ./Params:/home/px4/volume/Params

    command: /bin/bash -c "sleep inf"

    # command: /bin/bash -c "
    #  . /home/px4/volume/startFiles/gz_start_rtabmap.sh ${CameraType}"

  NAV2:
    image: ${registeryGPU}/px4_sim:${px4GPUTAG:?error}"
    container_name: nav2
    hostname: nav2
    # depends_on:
    #   - PX4
    tty: true
    # network_mode: "host"
    networks:
      px4:
        ipv4_address: "10.20.10.8"
    # restart: unless-stopped
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./includes/gz/:/home/px4/volume/includes/gz/
      - ./includes/gz/startFiles/:/home/px4/volume/startFiles
      - ./Params:/home/px4/volume/Params

  #   command: /bin/bash -c "
  #     ros2 launch nav2_bringup navigation_launch.py \
  #     params_file:=/home/px4/volume/Params/nav2/nav2_params.yaml"

    command: /bin/bash -c "sleep inf"

  # Nav2_Rviz:
  #   image: "docker.io/alienkh/px4_sim:${px4TAG:?error}"
  #   container_name: nav2_rviz
  #   hostname: nav2_rivz
  #   tty: true
  #   privileged: true
  #   restart: unless-stopped
  #   # depends_on:
  #   #   - nav2
  #   # network_mode: "host"
  #   networks:
  #     px4:
  #       ipv4_address: "10.20.10.9"

  #   environment:
  #     DISPLAY: ${DISPLAY}
  #     XAUTHORITY: ${XAUTH}
        
  #   volumes:
  #     - /tmp/.X11-unix/:/tmp/.X11-unix/
  #     - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
  #     - ./Params:/home/px4/volume/Params

  #   # command: /bin/bash -c "sleep inf"

  #   command: /bin/bash -c "
  #     ros2 launch nav2_bringup rviz_launch.py \
  #     params_file:=/home/px4/volume/Params/nav2/nav2_rviz"



networks:
  px4:
    ipam:
      driver: default
      config:
        - subnet: "10.20.10.0/24"
      

# volumes:
#   cash:
#   config:
